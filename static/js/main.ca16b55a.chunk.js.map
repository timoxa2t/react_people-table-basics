{"version":3,"sources":["components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","index.tsx"],"names":["Navigation","getClasses","isActive","classNames","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","selectedSlug","useParams","getPeopleFromServer","useCallback","result","modifiedPeople","map","motherName","fatherName","modifieedPerson","mother","find","father","useEffect","length","born","died","ErrorPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ca16b55a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface NavLinkClassName {\n  isActive: boolean;\n}\n\nexport const Navigation: React.FC = () => {\n  const getClasses = ({ isActive }: NavLinkClassName) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getClasses}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getClasses}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug: selectedSlug } = useParams();\n\n  const getPeopleFromServer = useCallback(async () => {\n    setIsLoading(true);\n    setIsError(false);\n\n    try {\n      const result = await getPeople();\n\n      const modifiedPeople = result.map(person => {\n        const {\n          motherName,\n          fatherName,\n        } = person;\n        const modifieedPerson = { ...person };\n\n        if (!motherName) {\n          modifieedPerson.motherName = '-';\n        }\n\n        if (!fatherName) {\n          modifieedPerson.fatherName = '-';\n        }\n\n        modifieedPerson.mother = result.find(({ name }) => name === motherName);\n        modifieedPerson.father = result.find(({ name }) => name === fatherName);\n\n        return modifieedPerson;\n      });\n\n      setPeople(modifiedPeople);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  const {\n                    slug,\n                    sex,\n                    born,\n                    died,\n                    fatherName,\n                    motherName,\n                    father,\n                    mother,\n                  } = person;\n\n                  return (\n                    <tr\n                      key={person.slug}\n                      data-cy=\"person\"\n                      className={classNames({\n                        'has-background-warning': selectedSlug === slug,\n                      })}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      <td>\n                        {mother\n                          ? <PersonLink person={mother} />\n                          : motherName}\n                      </td>\n                      <td>\n                        {father\n                          ? <PersonLink person={father} />\n                          : fatherName}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const ErrorPage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}